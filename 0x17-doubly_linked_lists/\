#include "lists.h"

/**
 * insert_dnodeint_at_index - insert node at a specific index
 * @h: entry to list
 * @idx: index
 * @n: integer value to add
 *
 * Return: address of new node or null
 */

dlistint_t *insert_dnodeint_at_index(dlistint_t **h, unsigned int idx, int n)
{
	unsigned int int_po = 0;
	dlistint_t *newnode;

	newnode = malloc(sizeof(newnode)); /*initialise memory newnode*/
	if (newnode == NULL)
	{
		printf("malloc");
		free(newnode);
		return (NULL)
	}
	newnode = NULL; /*make newnode NULL for instance of no insertion*/

	/*move pointer to index head*/
	while (*h != NULL)
	{
		if (int_po == idx)
			break;
		*h = (*h)->next;
		int_po += 1;
	}

	/*insert newnode at current index*/
	if (int_po == idx)
	{
		newnode->n = n;
		newnode->prev = (*h)->prev;
		newnode->next = *h;
	}

	*h = newnode;
	return (newnode);
}
