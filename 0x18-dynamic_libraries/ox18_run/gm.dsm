;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;;
;; Decompilation date: 2023-06-19 18:26:36
;; Architecture: x86
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x400568 -- 0x400582
0x400568:   48 83 ec 08                  	sub rsp, 8
0x40056c:   48 8b 05 85 1a 20 00         	mov rax, qword ptr [rip + 0x201a85]
0x400573:   48 85 c0                     	test rax, rax
0x400576:   74 05                        	je 0x40057d <_init+0x15>
0x400578:   e8 b3 00 00 00               	call 0x400630 <__gmon_start__>
0x40057d:   48 83 c4 08                  	add rsp, 8
0x400581:   c3                           	ret 
; section: .plt
; data inside code section at 0x400590 -- 0x4005a0
0x400590:   ff 35 72 1a 20 00 ff 25  74 1a 20 00 0f 1f 40 00   |.5r. ..%t. ...@.|
; function: function_4005a0 at 0x4005a0 -- 0x4005a6
0x4005a0:   ff 25 72 1a 20 00            	jmp qword ptr [rip + 0x201a72] <puts>
; data inside code section at 0x4005a6 -- 0x4005b0
0x4005a6:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_4005b0 at 0x4005b0 -- 0x4005b6
0x4005b0:   ff 25 6a 1a 20 00            	jmp qword ptr [rip + 0x201a6a] <__stack_chk_fail>
; data inside code section at 0x4005b6 -- 0x4005c0
0x4005b6:   68 01 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_4005c0 at 0x4005c0 -- 0x4005c6
0x4005c0:   ff 25 62 1a 20 00            	jmp qword ptr [rip + 0x201a62] <printf>
; data inside code section at 0x4005c6 -- 0x4005d0
0x4005c6:   68 02 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; function: function_4005d0 at 0x4005d0 -- 0x4005d6
0x4005d0:   ff 25 5a 1a 20 00            	jmp qword ptr [rip + 0x201a5a] <dprintf>
; data inside code section at 0x4005d6 -- 0x4005e0
0x4005d6:   68 03 00 00 00 e9 b0 ff  ff ff                     |h.........      |
; function: function_4005e0 at 0x4005e0 -- 0x4005e6
0x4005e0:   ff 25 52 1a 20 00            	jmp qword ptr [rip + 0x201a52] <__libc_start_main>
; data inside code section at 0x4005e6 -- 0x4005f0
0x4005e6:   68 04 00 00 00 e9 a0 ff  ff ff                     |h.........      |
; function: function_4005f0 at 0x4005f0 -- 0x4005f6
0x4005f0:   ff 25 4a 1a 20 00            	jmp qword ptr [rip + 0x201a4a] <srand>
; data inside code section at 0x4005f6 -- 0x400600
0x4005f6:   68 05 00 00 00 e9 90 ff  ff ff                     |h.........      |
; function: function_400600 at 0x400600 -- 0x400606
0x400600:   ff 25 42 1a 20 00            	jmp qword ptr [rip + 0x201a42] <time>
; data inside code section at 0x400606 -- 0x400610
0x400606:   68 06 00 00 00 e9 80 ff  ff ff                     |h.........      |
; function: function_400610 at 0x400610 -- 0x400616
0x400610:   ff 25 3a 1a 20 00            	jmp qword ptr [rip + 0x201a3a] <atoi>
; data inside code section at 0x400616 -- 0x400620
0x400616:   68 07 00 00 00 e9 70 ff  ff ff                     |h.....p...      |
; function: function_400620 at 0x400620 -- 0x400626
0x400620:   ff 25 32 1a 20 00            	jmp qword ptr [rip + 0x201a32] <rand>
; data inside code section at 0x400626 -- 0x400630
0x400626:   68 08 00 00 00 e9 60 ff  ff ff                     |h.....`...      |
; section: .plt.got
; function: function_400630 at 0x400630 -- 0x400636
0x400630:   ff 25 c2 19 20 00            	jmp qword ptr [rip + 0x2019c2] <__gmon_start__>
; data inside code section at 0x400636 -- 0x400638
0x400636:   66 90                                              |f.              |
; section: .text
; function: _start at 0x400640 -- 0x40066a
0x400640:   31 ed                        	xor ebp, ebp
0x400642:   49 89 d1                     	mov r9, rdx
0x400645:   5e                           	pop rsi
0x400646:   48 89 e2                     	mov rdx, rsp
0x400649:   48 83 e4 f0                  	and rsp, 0xfffffffffffffff0
0x40064d:   50                           	push rax
0x40064e:   54                           	push rsp
0x40064f:   49 c7 c0 70 0d 40 00         	mov r8, 0x400d70
0x400656:   48 c7 c1 00 0d 40 00         	mov rcx, 0x400d00
0x40065d:   48 c7 c7 a9 0b 40 00         	mov rdi, 0x400ba9
0x400664:   e8 77 ff ff ff               	call 0x4005e0 <__libc_start_main>
0x400669:   f4                           	hlt 
; data inside code section at 0x40066a -- 0x400670
0x40066a:   66 0f 1f 44 00 00                                  |f..D..          |
; function: deregister_tm_clones at 0x400670 -- 0x4006a2
0x400670:   b8 77 20 60 00               	mov eax, 0x602077
0x400675:   55                           	push rbp
0x400676:   48 2d 70 20 60 00            	sub rax, 0x602070
0x40067c:   48 83 f8 0e                  	cmp rax, 0xe
0x400680:   48 89 e5                     	mov rbp, rsp
0x400683:   76 1b                        	jbe 0x4006a0 <deregister_tm_clones+0x30>
0x400685:   b8 00 00 00 00               	mov eax, 0
0x40068a:   48 85 c0                     	test rax, rax
0x40068d:   74 11                        	je 0x4006a0 <deregister_tm_clones+0x30>
0x40068f:   5d                           	pop rbp
0x400690:   bf 70 20 60 00               	mov edi, 0x602070
0x400695:   ff e0                        	jmp rax
; data inside code section at 0x400697 -- 0x4006a0
0x400697:   66 0f 1f 84 00 00 00 00  00                        |f........       |
0x4006a0:   5d                           	pop rbp
0x4006a1:   c3                           	ret 
; data inside code section at 0x4006a2 -- 0x4006b0
0x4006a2:   0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: register_tm_clones at 0x4006b0 -- 0x4006ea
0x4006b0:   be 70 20 60 00               	mov esi, 0x602070
0x4006b5:   55                           	push rbp
0x4006b6:   48 81 ee 70 20 60 00         	sub rsi, 0x602070
0x4006bd:   48 c1 fe 03                  	sar rsi, 3
0x4006c1:   48 89 e5                     	mov rbp, rsp
0x4006c4:   48 89 f0                     	mov rax, rsi
0x4006c7:   48 c1 e8 3f                  	shr rax, 0x3f
0x4006cb:   48 01 c6                     	add rsi, rax
0x4006ce:   48 d1 fe                     	sar rsi, 1
0x4006d1:   74 15                        	je 0x4006e8 <register_tm_clones+0x38>
0x4006d3:   b8 00 00 00 00               	mov eax, 0
0x4006d8:   48 85 c0                     	test rax, rax
0x4006db:   74 0b                        	je 0x4006e8 <register_tm_clones+0x38>
0x4006dd:   5d                           	pop rbp
0x4006de:   bf 70 20 60 00               	mov edi, 0x602070
0x4006e3:   ff e0                        	jmp rax
; data inside code section at 0x4006e5 -- 0x4006e8
0x4006e5:   0f 1f 00                                           |...             |
0x4006e8:   5d                           	pop rbp
0x4006e9:   c3                           	ret 
; data inside code section at 0x4006ea -- 0x4006f0
0x4006ea:   66 0f 1f 44 00 00                                  |f..D..          |
; function: __do_global_dtors_aux at 0x4006f0 -- 0x40070c
0x4006f0:   80 3d 79 19 20 00 00         	cmp byte ptr [rip + 0x201979], 0
0x4006f7:   75 11                        	jne 0x40070a <__do_global_dtors_aux+0x1a>
0x4006f9:   55                           	push rbp
0x4006fa:   48 89 e5                     	mov rbp, rsp
0x4006fd:   e8 6e ff ff ff               	call 0x400670 <deregister_tm_clones>
0x400702:   5d                           	pop rbp
0x400703:   c6 05 66 19 20 00 01         	mov byte ptr [rip + 0x201966], 1
0x40070a:   f3 c3                        	ret 
; data inside code section at 0x40070c -- 0x400710
0x40070c:   0f 1f 40 00                                        |..@.            |
; function: frame_dummy at 0x400710 -- 0x400736
0x400710:   bf 20 1e 60 00               	mov edi, 0x601e20
0x400715:   48 83 3f 00                  	cmp qword ptr [rdi], 0
0x400719:   75 05                        	jne 0x400720 <frame_dummy+0x10>
0x40071b:   eb 93                        	jmp 0x4006b0 <register_tm_clones>
; data inside code section at 0x40071d -- 0x400720
0x40071d:   0f 1f 00                                           |...             |
0x400720:   b8 00 00 00 00               	mov eax, 0
0x400725:   48 85 c0                     	test rax, rax
0x400728:   74 f1                        	je 0x40071b <frame_dummy+0xb>
0x40072a:   55                           	push rbp
0x40072b:   48 89 e5                     	mov rbp, rsp
0x40072e:   ff d0                        	call rax
0x400730:   5d                           	pop rbp
0x400731:   e9 7a ff ff ff               	jmp 0x4006b0 <register_tm_clones>
; function: check_input at 0x400736 -- 0x40080a
0x400736:   55                           	push rbp
0x400737:   48 89 e5                     	mov rbp, rsp
0x40073a:   48 89 7d e8                  	mov qword ptr [rbp - 0x18], rdi
0x40073e:   89 75 e4                     	mov dword ptr [rbp - 0x1c], esi
0x400741:   89 55 e0                     	mov dword ptr [rbp - 0x20], edx
0x400744:   c7 45 f8 00 00 00 00         	mov dword ptr [rbp - 8], 0
0x40074b:   e9 8e 00 00 00               	jmp 0x4007de <check_input+0xa8>
0x400750:   8b 45 f8                     	mov eax, dword ptr [rbp - 8]
0x400753:   48 98                        	cdqe 
0x400755:   48 8d 14 85 00 00 00 00      	lea rdx, [rax*4]
0x40075d:   48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0x400761:   48 01 d0                     	add rax, rdx
0x400764:   8b 00                        	mov eax, dword ptr [rax]
0x400766:   85 c0                        	test eax, eax
0x400768:   7e 1b                        	jle 0x400785 <check_input+0x4f>
0x40076a:   8b 45 f8                     	mov eax, dword ptr [rbp - 8]
0x40076d:   48 98                        	cdqe 
0x40076f:   48 8d 14 85 00 00 00 00      	lea rdx, [rax*4]
0x400777:   48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0x40077b:   48 01 d0                     	add rax, rdx
0x40077e:   8b 00                        	mov eax, dword ptr [rax]
0x400780:   83 f8 4b                     	cmp eax, 0x4b
0x400783:   7e 07                        	jle 0x40078c <check_input+0x56>
0x400785:   b8 00 00 00 00               	mov eax, 0
0x40078a:   eb 7c                        	jmp 0x400808 <check_input+0xd2>
0x40078c:   8b 45 f8                     	mov eax, dword ptr [rbp - 8]
0x40078f:   83 c0 01                     	add eax, 1
0x400792:   89 45 fc                     	mov dword ptr [rbp - 4], eax
0x400795:   eb 3b                        	jmp 0x4007d2 <check_input+0x9c>
0x400797:   8b 45 f8                     	mov eax, dword ptr [rbp - 8]
0x40079a:   48 98                        	cdqe 
0x40079c:   48 8d 14 85 00 00 00 00      	lea rdx, [rax*4]
0x4007a4:   48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0x4007a8:   48 01 d0                     	add rax, rdx
0x4007ab:   8b 10                        	mov edx, dword ptr [rax]
0x4007ad:   8b 45 fc                     	mov eax, dword ptr [rbp - 4]
0x4007b0:   48 98                        	cdqe 
0x4007b2:   48 8d 0c 85 00 00 00 00      	lea rcx, [rax*4]
0x4007ba:   48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0x4007be:   48 01 c8                     	add rax, rcx
0x4007c1:   8b 00                        	mov eax, dword ptr [rax]
0x4007c3:   39 c2                        	cmp edx, eax
0x4007c5:   75 07                        	jne 0x4007ce <check_input+0x98>
0x4007c7:   b8 00 00 00 00               	mov eax, 0
0x4007cc:   eb 3a                        	jmp 0x400808 <check_input+0xd2>
0x4007ce:   83 45 fc 01                  	add dword ptr [rbp - 4], 1
0x4007d2:   8b 45 fc                     	mov eax, dword ptr [rbp - 4]
0x4007d5:   3b 45 e0                     	cmp eax, dword ptr [rbp - 0x20]
0x4007d8:   7c bd                        	jl 0x400797 <check_input+0x61>
0x4007da:   83 45 f8 01                  	add dword ptr [rbp - 8], 1
0x4007de:   8b 45 f8                     	mov eax, dword ptr [rbp - 8]
0x4007e1:   3b 45 e0                     	cmp eax, dword ptr [rbp - 0x20]
0x4007e4:   0f 8c 66 ff ff ff            	jl 0x400750 <check_input+0x1a>
0x4007ea:   83 7d e0 05                  	cmp dword ptr [rbp - 0x20], 5
0x4007ee:   75 13                        	jne 0x400803 <check_input+0xcd>
0x4007f0:   83 7d e4 00                  	cmp dword ptr [rbp - 0x1c], 0
0x4007f4:   7e 06                        	jle 0x4007fc <check_input+0xc6>
0x4007f6:   83 7d e4 0f                  	cmp dword ptr [rbp - 0x1c], 0xf
0x4007fa:   7e 07                        	jle 0x400803 <check_input+0xcd>
0x4007fc:   b8 00 00 00 00               	mov eax, 0
0x400801:   eb 05                        	jmp 0x400808 <check_input+0xd2>
0x400803:   b8 01 00 00 00               	mov eax, 1
0x400808:   5d                           	pop rbp
0x400809:   c3                           	ret 
; function: pick_numbers at 0x40080a -- 0x4009c9
0x40080a:   55                           	push rbp
0x40080b:   48 89 e5                     	mov rbp, rsp
0x40080e:   53                           	push rbx
0x40080f:   48 83 ec 18                  	sub rsp, 0x18
0x400813:   48 89 7d e8                  	mov qword ptr [rbp - 0x18], rdi
0x400817:   48 89 75 e0                  	mov qword ptr [rbp - 0x20], rsi
0x40081b:   bf 00 00 00 00               	mov edi, 0
0x400820:   e8 db fd ff ff               	call 0x400600 <time>
0x400825:   89 c7                        	mov edi, eax
0x400827:   e8 c4 fd ff ff               	call 0x4005f0 <srand>
0x40082c:   e8 ef fd ff ff               	call 0x400620 <rand>
0x400831:   89 c1                        	mov ecx, eax
0x400833:   ba 89 88 88 88               	mov edx, 0x88888889
0x400838:   89 c8                        	mov eax, ecx
0x40083a:   f7 ea                        	imul edx
0x40083c:   8d 04 0a                     	lea eax, [rdx + rcx]
0x40083f:   c1 f8 03                     	sar eax, 3
0x400842:   89 c2                        	mov edx, eax
0x400844:   89 c8                        	mov eax, ecx
0x400846:   c1 f8 1f                     	sar eax, 0x1f
0x400849:   29 c2                        	sub edx, eax
0x40084b:   89 d0                        	mov eax, edx
0x40084d:   89 c2                        	mov edx, eax
0x40084f:   c1 e2 04                     	shl edx, 4
0x400852:   29 c2                        	sub edx, eax
0x400854:   89 c8                        	mov eax, ecx
0x400856:   29 d0                        	sub eax, edx
0x400858:   8d 50 01                     	lea edx, [rax + 1]
0x40085b:   48 8b 45 e0                  	mov rax, qword ptr [rbp - 0x20]
0x40085f:   89 10                        	mov dword ptr [rax], edx
0x400861:   e8 ba fd ff ff               	call 0x400620 <rand>
0x400866:   89 c1                        	mov ecx, eax
0x400868:   ba b5 81 4e 1b               	mov edx, 0x1b4e81b5
0x40086d:   89 c8                        	mov eax, ecx
0x40086f:   f7 ea                        	imul edx
0x400871:   c1 fa 03                     	sar edx, 3
0x400874:   89 c8                        	mov eax, ecx
0x400876:   c1 f8 1f                     	sar eax, 0x1f
0x400879:   29 c2                        	sub edx, eax
0x40087b:   89 d0                        	mov eax, edx
0x40087d:   6b c0 4b                     	imul eax, eax, 0x4b
0x400880:   29 c1                        	sub ecx, eax
0x400882:   89 c8                        	mov eax, ecx
0x400884:   8d 50 01                     	lea edx, [rax + 1]
0x400887:   48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0x40088b:   89 10                        	mov dword ptr [rax], edx
0x40088d:   48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0x400891:   48 8d 58 04                  	lea rbx, [rax + 4]
0x400895:   e8 86 fd ff ff               	call 0x400620 <rand>
0x40089a:   89 c1                        	mov ecx, eax
0x40089c:   ba b5 81 4e 1b               	mov edx, 0x1b4e81b5
0x4008a1:   89 c8                        	mov eax, ecx
0x4008a3:   f7 ea                        	imul edx
0x4008a5:   c1 fa 03                     	sar edx, 3
0x4008a8:   89 c8                        	mov eax, ecx
0x4008aa:   c1 f8 1f                     	sar eax, 0x1f
0x4008ad:   29 c2                        	sub edx, eax
0x4008af:   89 d0                        	mov eax, edx
0x4008b1:   6b c0 4b                     	imul eax, eax, 0x4b
0x4008b4:   29 c1                        	sub ecx, eax
0x4008b6:   89 c8                        	mov eax, ecx
0x4008b8:   83 c0 01                     	add eax, 1
0x4008bb:   89 03                        	mov dword ptr [rbx], eax
0x4008bd:   48 8b 45 e0                  	mov rax, qword ptr [rbp - 0x20]
0x4008c1:   8b 08                        	mov ecx, dword ptr [rax]
0x4008c3:   48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0x4008c7:   ba 02 00 00 00               	mov edx, 2
0x4008cc:   89 ce                        	mov esi, ecx
0x4008ce:   48 89 c7                     	mov rdi, rax
0x4008d1:   e8 60 fe ff ff               	call 0x400736 <check_input>
0x4008d6:   85 c0                        	test eax, eax
0x4008d8:   74 b3                        	je 0x40088d <pick_numbers+0x83>
0x4008da:   48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0x4008de:   48 8d 58 08                  	lea rbx, [rax + 8]
0x4008e2:   e8 39 fd ff ff               	call 0x400620 <rand>
0x4008e7:   89 c1                        	mov ecx, eax
0x4008e9:   ba b5 81 4e 1b               	mov edx, 0x1b4e81b5
0x4008ee:   89 c8                        	mov eax, ecx
0x4008f0:   f7 ea                        	imul edx
0x4008f2:   c1 fa 03                     	sar edx, 3
0x4008f5:   89 c8                        	mov eax, ecx
0x4008f7:   c1 f8 1f                     	sar eax, 0x1f
0x4008fa:   29 c2                        	sub edx, eax
0x4008fc:   89 d0                        	mov eax, edx
0x4008fe:   6b c0 4b                     	imul eax, eax, 0x4b
0x400901:   29 c1                        	sub ecx, eax
0x400903:   89 c8                        	mov eax, ecx
0x400905:   83 c0 01                     	add eax, 1
0x400908:   89 03                        	mov dword ptr [rbx], eax
0x40090a:   48 8b 45 e0                  	mov rax, qword ptr [rbp - 0x20]
0x40090e:   8b 08                        	mov ecx, dword ptr [rax]
0x400910:   48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0x400914:   ba 03 00 00 00               	mov edx, 3
0x400919:   89 ce                        	mov esi, ecx
0x40091b:   48 89 c7                     	mov rdi, rax
0x40091e:   e8 13 fe ff ff               	call 0x400736 <check_input>
0x400923:   85 c0                        	test eax, eax
0x400925:   74 b3                        	je 0x4008da <pick_numbers+0xd0>
0x400927:   48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0x40092b:   48 8d 58 0c                  	lea rbx, [rax + 0xc]
0x40092f:   e8 ec fc ff ff               	call 0x400620 <rand>
0x400934:   89 c1                        	mov ecx, eax
0x400936:   ba b5 81 4e 1b               	mov edx, 0x1b4e81b5
0x40093b:   89 c8                        	mov eax, ecx
0x40093d:   f7 ea                        	imul edx
0x40093f:   c1 fa 03                     	sar edx, 3
0x400942:   89 c8                        	mov eax, ecx
0x400944:   c1 f8 1f                     	sar eax, 0x1f
0x400947:   29 c2                        	sub edx, eax
0x400949:   89 d0                        	mov eax, edx
0x40094b:   6b c0 4b                     	imul eax, eax, 0x4b
0x40094e:   29 c1                        	sub ecx, eax
0x400950:   89 c8                        	mov eax, ecx
0x400952:   83 c0 01                     	add eax, 1
0x400955:   89 03                        	mov dword ptr [rbx], eax
0x400957:   48 8b 45 e0                  	mov rax, qword ptr [rbp - 0x20]
0x40095b:   8b 08                        	mov ecx, dword ptr [rax]
0x40095d:   48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0x400961:   ba 04 00 00 00               	mov edx, 4
0x400966:   89 ce                        	mov esi, ecx
0x400968:   48 89 c7                     	mov rdi, rax
0x40096b:   e8 c6 fd ff ff               	call 0x400736 <check_input>
0x400970:   85 c0                        	test eax, eax
0x400972:   74 b3                        	je 0x400927 <pick_numbers+0x11d>
0x400974:   48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0x400978:   48 8d 58 10                  	lea rbx, [rax + 0x10]
0x40097c:   e8 9f fc ff ff               	call 0x400620 <rand>
0x400981:   89 c1                        	mov ecx, eax
0x400983:   ba b5 81 4e 1b               	mov edx, 0x1b4e81b5
0x400988:   89 c8                        	mov eax, ecx
0x40098a:   f7 ea                        	imul edx
0x40098c:   c1 fa 03                     	sar edx, 3
0x40098f:   89 c8                        	mov eax, ecx
0x400991:   c1 f8 1f                     	sar eax, 0x1f
0x400994:   29 c2                        	sub edx, eax
0x400996:   89 d0                        	mov eax, edx
0x400998:   6b c0 4b                     	imul eax, eax, 0x4b
0x40099b:   29 c1                        	sub ecx, eax
0x40099d:   89 c8                        	mov eax, ecx
0x40099f:   83 c0 01                     	add eax, 1
0x4009a2:   89 03                        	mov dword ptr [rbx], eax
0x4009a4:   48 8b 45 e0                  	mov rax, qword ptr [rbp - 0x20]
0x4009a8:   8b 08                        	mov ecx, dword ptr [rax]
0x4009aa:   48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0x4009ae:   ba 05 00 00 00               	mov edx, 5
0x4009b3:   89 ce                        	mov esi, ecx
0x4009b5:   48 89 c7                     	mov rdi, rax
0x4009b8:   e8 79 fd ff ff               	call 0x400736 <check_input>
0x4009bd:   85 c0                        	test eax, eax
0x4009bf:   74 b3                        	je 0x400974 <pick_numbers+0x16a>
0x4009c1:   90                           	nop 
0x4009c2:   48 83 c4 18                  	add rsp, 0x18
0x4009c6:   5b                           	pop rbx
0x4009c7:   5d                           	pop rbp
0x4009c8:   c3                           	ret 
; function: print_numbers at 0x4009c9 -- 0x400a29
0x4009c9:   55                           	push rbp
0x4009ca:   48 89 e5                     	mov rbp, rsp
0x4009cd:   48 83 ec 20                  	sub rsp, 0x20
0x4009d1:   48 89 7d e8                  	mov qword ptr [rbp - 0x18], rdi
0x4009d5:   89 75 e4                     	mov dword ptr [rbp - 0x1c], esi
0x4009d8:   c7 45 fc 00 00 00 00         	mov dword ptr [rbp - 4], 0
0x4009df:   eb 2b                        	jmp 0x400a0c <print_numbers+0x43>
0x4009e1:   8b 45 fc                     	mov eax, dword ptr [rbp - 4]
0x4009e4:   48 98                        	cdqe 
0x4009e6:   48 8d 14 85 00 00 00 00      	lea rdx, [rax*4]
0x4009ee:   48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0x4009f2:   48 01 d0                     	add rax, rdx
0x4009f5:   8b 00                        	mov eax, dword ptr [rax]
0x4009f7:   89 c6                        	mov esi, eax
0x4009f9:   bf 88 0d 40 00               	mov edi, 0x400d88 ; "%d "
0x4009fe:   b8 00 00 00 00               	mov eax, 0
0x400a03:   e8 b8 fb ff ff               	call 0x4005c0 <printf>
0x400a08:   83 45 fc 01                  	add dword ptr [rbp - 4], 1
0x400a0c:   83 7d fc 04                  	cmp dword ptr [rbp - 4], 4
0x400a10:   7e cf                        	jle 0x4009e1 <print_numbers+0x18>
0x400a12:   8b 45 e4                     	mov eax, dword ptr [rbp - 0x1c]
0x400a15:   89 c6                        	mov esi, eax
0x400a17:   bf 8c 0d 40 00               	mov edi, 0x400d8c ; "- %d\n"
0x400a1c:   b8 00 00 00 00               	mov eax, 0
0x400a21:   e8 9a fb ff ff               	call 0x4005c0 <printf>
0x400a26:   90                           	nop 
0x400a27:   c9                           	leave 
0x400a28:   c3                           	ret 
; function: check_result at 0x400a29 -- 0x400ba9
0x400a29:   55                           	push rbp
0x400a2a:   48 89 e5                     	mov rbp, rsp
0x400a2d:   48 83 ec 30                  	sub rsp, 0x30
0x400a31:   48 89 7d e8                  	mov qword ptr [rbp - 0x18], rdi
0x400a35:   89 75 e4                     	mov dword ptr [rbp - 0x1c], esi
0x400a38:   48 89 55 d8                  	mov qword ptr [rbp - 0x28], rdx
0x400a3c:   89 4d e0                     	mov dword ptr [rbp - 0x20], ecx
0x400a3f:   c7 45 f0 00 00 00 00         	mov dword ptr [rbp - 0x10], 0
0x400a46:   c7 45 f4 00 00 00 00         	mov dword ptr [rbp - 0xc], 0
0x400a4d:   c7 45 f8 00 00 00 00         	mov dword ptr [rbp - 8], 0
0x400a54:   eb 4d                        	jmp 0x400aa3 <check_result+0x7a>
0x400a56:   c7 45 fc 00 00 00 00         	mov dword ptr [rbp - 4], 0
0x400a5d:   eb 3a                        	jmp 0x400a99 <check_result+0x70>
0x400a5f:   8b 45 f8                     	mov eax, dword ptr [rbp - 8]
0x400a62:   48 98                        	cdqe 
0x400a64:   48 8d 14 85 00 00 00 00      	lea rdx, [rax*4]
0x400a6c:   48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0x400a70:   48 01 d0                     	add rax, rdx
0x400a73:   8b 10                        	mov edx, dword ptr [rax]
0x400a75:   8b 45 fc                     	mov eax, dword ptr [rbp - 4]
0x400a78:   48 98                        	cdqe 
0x400a7a:   48 8d 0c 85 00 00 00 00      	lea rcx, [rax*4]
0x400a82:   48 8b 45 d8                  	mov rax, qword ptr [rbp - 0x28]
0x400a86:   48 01 c8                     	add rax, rcx
0x400a89:   8b 00                        	mov eax, dword ptr [rax]
0x400a8b:   39 c2                        	cmp edx, eax
0x400a8d:   75 06                        	jne 0x400a95 <check_result+0x6c>
0x400a8f:   83 45 f0 01                  	add dword ptr [rbp - 0x10], 1
0x400a93:   eb 0a                        	jmp 0x400a9f <check_result+0x76>
0x400a95:   83 45 fc 01                  	add dword ptr [rbp - 4], 1
0x400a99:   83 7d fc 04                  	cmp dword ptr [rbp - 4], 4
0x400a9d:   7e c0                        	jle 0x400a5f <check_result+0x36>
0x400a9f:   83 45 f8 01                  	add dword ptr [rbp - 8], 1
0x400aa3:   83 7d f8 04                  	cmp dword ptr [rbp - 8], 4
0x400aa7:   7e ad                        	jle 0x400a56 <check_result+0x2d>
0x400aa9:   8b 45 e4                     	mov eax, dword ptr [rbp - 0x1c]
0x400aac:   3b 45 e0                     	cmp eax, dword ptr [rbp - 0x20]
0x400aaf:   75 07                        	jne 0x400ab8 <check_result+0x8f>
0x400ab1:   c7 45 f4 01 00 00 00         	mov dword ptr [rbp - 0xc], 1
0x400ab8:   83 7d f0 00                  	cmp dword ptr [rbp - 0x10], 0
0x400abc:   75 15                        	jne 0x400ad3 <check_result+0xaa>
0x400abe:   83 7d f4 01                  	cmp dword ptr [rbp - 0xc], 1
0x400ac2:   75 0f                        	jne 0x400ad3 <check_result+0xaa>
0x400ac4:   bf 98 0d 40 00               	mov edi, 0x400d98 ; "Congratulations, you win 1 point"
0x400ac9:   e8 d2 fa ff ff               	call 0x4005a0 <puts>
0x400ace:   e9 d3 00 00 00               	jmp 0x400ba6 <check_result+0x17d>
0x400ad3:   83 7d f0 01                  	cmp dword ptr [rbp - 0x10], 1
0x400ad7:   75 15                        	jne 0x400aee <check_result+0xc5>
0x400ad9:   83 7d f4 01                  	cmp dword ptr [rbp - 0xc], 1
0x400add:   75 0f                        	jne 0x400aee <check_result+0xc5>
0x400adf:   bf c0 0d 40 00               	mov edi, 0x400dc0 ; "Congratulations, you win 2 points"
0x400ae4:   e8 b7 fa ff ff               	call 0x4005a0 <puts>
0x400ae9:   e9 b8 00 00 00               	jmp 0x400ba6 <check_result+0x17d>
0x400aee:   83 7d f0 02                  	cmp dword ptr [rbp - 0x10], 2
0x400af2:   75 15                        	jne 0x400b09 <check_result+0xe0>
0x400af4:   83 7d f4 01                  	cmp dword ptr [rbp - 0xc], 1
0x400af8:   75 0f                        	jne 0x400b09 <check_result+0xe0>
0x400afa:   bf e8 0d 40 00               	mov edi, 0x400de8 ; "Congratulations, you win 5 points"
0x400aff:   e8 9c fa ff ff               	call 0x4005a0 <puts>
0x400b04:   e9 9d 00 00 00               	jmp 0x400ba6 <check_result+0x17d>
0x400b09:   83 7d f0 03                  	cmp dword ptr [rbp - 0x10], 3
0x400b0d:   75 15                        	jne 0x400b24 <check_result+0xfb>
0x400b0f:   83 7d f4 00                  	cmp dword ptr [rbp - 0xc], 0
0x400b13:   75 0f                        	jne 0x400b24 <check_result+0xfb>
0x400b15:   bf e8 0d 40 00               	mov edi, 0x400de8 ; "Congratulations, you win 5 points"
0x400b1a:   e8 81 fa ff ff               	call 0x4005a0 <puts>
0x400b1f:   e9 82 00 00 00               	jmp 0x400ba6 <check_result+0x17d>
0x400b24:   83 7d f0 03                  	cmp dword ptr [rbp - 0x10], 3
0x400b28:   75 12                        	jne 0x400b3c <check_result+0x113>
0x400b2a:   83 7d f4 01                  	cmp dword ptr [rbp - 0xc], 1
0x400b2e:   75 0c                        	jne 0x400b3c <check_result+0x113>
0x400b30:   bf 10 0e 40 00               	mov edi, 0x400e10 ; "Congratulations, you win 50 points"
0x400b35:   e8 66 fa ff ff               	call 0x4005a0 <puts>
0x400b3a:   eb 6a                        	jmp 0x400ba6 <check_result+0x17d>
0x400b3c:   83 7d f0 04                  	cmp dword ptr [rbp - 0x10], 4
0x400b40:   75 12                        	jne 0x400b54 <check_result+0x12b>
0x400b42:   83 7d f4 00                  	cmp dword ptr [rbp - 0xc], 0
0x400b46:   75 0c                        	jne 0x400b54 <check_result+0x12b>
0x400b48:   bf 38 0e 40 00               	mov edi, 0x400e38 ; "Congratulations, you win 500 points"
0x400b4d:   e8 4e fa ff ff               	call 0x4005a0 <puts>
0x400b52:   eb 52                        	jmp 0x400ba6 <check_result+0x17d>
0x400b54:   83 7d f0 04                  	cmp dword ptr [rbp - 0x10], 4
0x400b58:   75 12                        	jne 0x400b6c <check_result+0x143>
0x400b5a:   83 7d f4 01                  	cmp dword ptr [rbp - 0xc], 1
0x400b5e:   75 0c                        	jne 0x400b6c <check_result+0x143>
0x400b60:   bf 60 0e 40 00               	mov edi, 0x400e60 ; "Congratulations, you win 5,000 points"
0x400b65:   e8 36 fa ff ff               	call 0x4005a0 <puts>
0x400b6a:   eb 3a                        	jmp 0x400ba6 <check_result+0x17d>
0x400b6c:   83 7d f0 05                  	cmp dword ptr [rbp - 0x10], 5
0x400b70:   75 12                        	jne 0x400b84 <check_result+0x15b>
0x400b72:   83 7d f4 00                  	cmp dword ptr [rbp - 0xc], 0
0x400b76:   75 0c                        	jne 0x400b84 <check_result+0x15b>
0x400b78:   bf 88 0e 40 00               	mov edi, 0x400e88 ; "Congratulations, you win 1,000,000 points"
0x400b7d:   e8 1e fa ff ff               	call 0x4005a0 <puts>
0x400b82:   eb 22                        	jmp 0x400ba6 <check_result+0x17d>
0x400b84:   83 7d f0 05                  	cmp dword ptr [rbp - 0x10], 5
0x400b88:   75 12                        	jne 0x400b9c <check_result+0x173>
0x400b8a:   83 7d f4 01                  	cmp dword ptr [rbp - 0xc], 1
0x400b8e:   75 0c                        	jne 0x400b9c <check_result+0x173>
0x400b90:   bf b8 0e 40 00               	mov edi, 0x400eb8 ; "Congratulations, you win the Jackpot!"
0x400b95:   e8 06 fa ff ff               	call 0x4005a0 <puts>
0x400b9a:   eb 0a                        	jmp 0x400ba6 <check_result+0x17d>
0x400b9c:   bf de 0e 40 00               	mov edi, 0x400ede ; "Sorry, try again!"
0x400ba1:   e8 fa f9 ff ff               	call 0x4005a0 <puts>
0x400ba6:   90                           	nop 
0x400ba7:   c9                           	leave 
0x400ba8:   c3                           	ret 
; function: main at 0x400ba9 -- 0x400cf9
0x400ba9:   55                           	push rbp
0x400baa:   48 89 e5                     	mov rbp, rsp
0x400bad:   48 83 ec 60                  	sub rsp, 0x60
0x400bb1:   89 7d ac                     	mov dword ptr [rbp - 0x54], edi
0x400bb4:   48 89 75 a0                  	mov qword ptr [rbp - 0x60], rsi
0x400bb8:   64 48 8b 04 25 28 00 00 00   	mov rax, qword ptr fs:[0x28]
0x400bc1:   48 89 45 f8                  	mov qword ptr [rbp - 8], rax
0x400bc5:   31 c0                        	xor eax, eax
0x400bc7:   83 7d ac 07                  	cmp dword ptr [rbp - 0x54], 7
0x400bcb:   74 1e                        	je 0x400beb <main+0x42>
0x400bcd:   be f0 0e 40 00               	mov esi, 0x400ef0 ; "Usage: gm n1 n2 n3 n4 n5 bonus\n - (first pool) five different numbers from 1 to 75, followed by \n - (second pool) one number from 1 to 15\n"
0x400bd2:   bf 02 00 00 00               	mov edi, 2
0x400bd7:   b8 00 00 00 00               	mov eax, 0
0x400bdc:   e8 ef f9 ff ff               	call 0x4005d0 <dprintf>
0x400be1:   b8 01 00 00 00               	mov eax, 1
0x400be6:   e9 f8 00 00 00               	jmp 0x400ce3 <main+0x13a>
0x400beb:   48 8b 45 a0                  	mov rax, qword ptr [rbp - 0x60]
0x400bef:   48 83 c0 08                  	add rax, 8
0x400bf3:   48 8b 00                     	mov rax, qword ptr [rax]
0x400bf6:   48 89 c7                     	mov rdi, rax
0x400bf9:   e8 12 fa ff ff               	call 0x400610 <atoi>
0x400bfe:   89 45 c0                     	mov dword ptr [rbp - 0x40], eax
0x400c01:   48 8b 45 a0                  	mov rax, qword ptr [rbp - 0x60]
0x400c05:   48 83 c0 10                  	add rax, 0x10
0x400c09:   48 8b 00                     	mov rax, qword ptr [rax]
0x400c0c:   48 89 c7                     	mov rdi, rax
0x400c0f:   e8 fc f9 ff ff               	call 0x400610 <atoi>
0x400c14:   89 45 c4                     	mov dword ptr [rbp - 0x3c], eax
0x400c17:   48 8b 45 a0                  	mov rax, qword ptr [rbp - 0x60]
0x400c1b:   48 83 c0 18                  	add rax, 0x18
0x400c1f:   48 8b 00                     	mov rax, qword ptr [rax]
0x400c22:   48 89 c7                     	mov rdi, rax
0x400c25:   e8 e6 f9 ff ff               	call 0x400610 <atoi>
0x400c2a:   89 45 c8                     	mov dword ptr [rbp - 0x38], eax
0x400c2d:   48 8b 45 a0                  	mov rax, qword ptr [rbp - 0x60]
0x400c31:   48 83 c0 20                  	add rax, 0x20
0x400c35:   48 8b 00                     	mov rax, qword ptr [rax]
0x400c38:   48 89 c7                     	mov rdi, rax
0x400c3b:   e8 d0 f9 ff ff               	call 0x400610 <atoi>
0x400c40:   89 45 cc                     	mov dword ptr [rbp - 0x34], eax
0x400c43:   48 8b 45 a0                  	mov rax, qword ptr [rbp - 0x60]
0x400c47:   48 83 c0 28                  	add rax, 0x28
0x400c4b:   48 8b 00                     	mov rax, qword ptr [rax]
0x400c4e:   48 89 c7                     	mov rdi, rax
0x400c51:   e8 ba f9 ff ff               	call 0x400610 <atoi>
0x400c56:   89 45 d0                     	mov dword ptr [rbp - 0x30], eax
0x400c59:   48 8b 45 a0                  	mov rax, qword ptr [rbp - 0x60]
0x400c5d:   48 83 c0 30                  	add rax, 0x30
0x400c61:   48 8b 00                     	mov rax, qword ptr [rax]
0x400c64:   48 89 c7                     	mov rdi, rax
0x400c67:   e8 a4 f9 ff ff               	call 0x400610 <atoi>
0x400c6c:   89 45 bc                     	mov dword ptr [rbp - 0x44], eax
0x400c6f:   8b 4d bc                     	mov ecx, dword ptr [rbp - 0x44]
0x400c72:   48 8d 45 c0                  	lea rax, [rbp - 0x40]
0x400c76:   ba 05 00 00 00               	mov edx, 5
0x400c7b:   89 ce                        	mov esi, ecx
0x400c7d:   48 89 c7                     	mov rdi, rax
0x400c80:   e8 b1 fa ff ff               	call 0x400736 <check_input>
0x400c85:   85 c0                        	test eax, eax
0x400c87:   75 1b                        	jne 0x400ca4 <main+0xfb>
0x400c89:   be f0 0e 40 00               	mov esi, 0x400ef0 ; "Usage: gm n1 n2 n3 n4 n5 bonus\n - (first pool) five different numbers from 1 to 75, followed by \n - (second pool) one number from 1 to 15\n"
0x400c8e:   bf 02 00 00 00               	mov edi, 2
0x400c93:   b8 00 00 00 00               	mov eax, 0
0x400c98:   e8 33 f9 ff ff               	call 0x4005d0 <dprintf>
0x400c9d:   b8 01 00 00 00               	mov eax, 1
0x400ca2:   eb 3f                        	jmp 0x400ce3 <main+0x13a>
0x400ca4:   48 8d 55 b8                  	lea rdx, [rbp - 0x48]
0x400ca8:   48 8d 45 e0                  	lea rax, [rbp - 0x20]
0x400cac:   48 89 d6                     	mov rsi, rdx
0x400caf:   48 89 c7                     	mov rdi, rax
0x400cb2:   e8 53 fb ff ff               	call 0x40080a <pick_numbers>
0x400cb7:   8b 55 b8                     	mov edx, dword ptr [rbp - 0x48]
0x400cba:   48 8d 45 e0                  	lea rax, [rbp - 0x20]
0x400cbe:   89 d6                        	mov esi, edx
0x400cc0:   48 89 c7                     	mov rdi, rax
0x400cc3:   e8 01 fd ff ff               	call 0x4009c9 <print_numbers>
0x400cc8:   8b 75 b8                     	mov esi, dword ptr [rbp - 0x48]
0x400ccb:   8b 4d bc                     	mov ecx, dword ptr [rbp - 0x44]
0x400cce:   48 8d 55 c0                  	lea rdx, [rbp - 0x40]
0x400cd2:   48 8d 45 e0                  	lea rax, [rbp - 0x20]
0x400cd6:   48 89 c7                     	mov rdi, rax
0x400cd9:   e8 4b fd ff ff               	call 0x400a29 <check_result>
0x400cde:   b8 00 00 00 00               	mov eax, 0
0x400ce3:   48 8b 4d f8                  	mov rcx, qword ptr [rbp - 8]
0x400ce7:   64 48 33 0c 25 28 00 00 00   	xor rcx, qword ptr fs:[0x28]
0x400cf0:   74 05                        	je 0x400cf7 <main+0x14e>
0x400cf2:   e8 b9 f8 ff ff               	call 0x4005b0 <__stack_chk_fail>
0x400cf7:   c9                           	leave 
0x400cf8:   c3                           	ret 
; data inside code section at 0x400cf9 -- 0x400d00
0x400cf9:   0f 1f 80 00 00 00 00                               |.......         |
; function: __libc_csu_init at 0x400d00 -- 0x400d65
0x400d00:   41 57                        	push r15
0x400d02:   41 56                        	push r14
0x400d04:   41 89 ff                     	mov r15d, edi
0x400d07:   41 55                        	push r13
0x400d09:   41 54                        	push r12
0x400d0b:   4c 8d 25 fe 10 20 00         	lea r12, [rip + 0x2010fe]
0x400d12:   55                           	push rbp
0x400d13:   48 8d 2d fe 10 20 00         	lea rbp, [rip + 0x2010fe]
0x400d1a:   53                           	push rbx
0x400d1b:   49 89 f6                     	mov r14, rsi
0x400d1e:   49 89 d5                     	mov r13, rdx
0x400d21:   4c 29 e5                     	sub rbp, r12
0x400d24:   48 83 ec 08                  	sub rsp, 8
0x400d28:   48 c1 fd 03                  	sar rbp, 3
0x400d2c:   e8 37 f8 ff ff               	call 0x400568 <_init>
0x400d31:   48 85 ed                     	test rbp, rbp
0x400d34:   74 20                        	je 0x400d56 <__libc_csu_init+0x56>
0x400d36:   31 db                        	xor ebx, ebx
0x400d38:   0f 1f 84 00 00 00 00 00      	nop dword ptr [rax + rax]
0x400d40:   4c 89 ea                     	mov rdx, r13
0x400d43:   4c 89 f6                     	mov rsi, r14
0x400d46:   44 89 ff                     	mov edi, r15d
0x400d49:   41 ff 14 dc                  	call qword ptr [r12 + rbx*8]
0x400d4d:   48 83 c3 01                  	add rbx, 1
0x400d51:   48 39 eb                     	cmp rbx, rbp
0x400d54:   75 ea                        	jne 0x400d40 <__libc_csu_init+0x40>
0x400d56:   48 83 c4 08                  	add rsp, 8
0x400d5a:   5b                           	pop rbx
0x400d5b:   5d                           	pop rbp
0x400d5c:   41 5c                        	pop r12
0x400d5e:   41 5d                        	pop r13
0x400d60:   41 5e                        	pop r14
0x400d62:   41 5f                        	pop r15
0x400d64:   c3                           	ret 
; data inside code section at 0x400d65 -- 0x400d70
0x400d65:   90 66 2e 0f 1f 84 00 00  00 00 00                  |.f.........     |
; function: __libc_csu_fini at 0x400d70 -- 0x400d72
0x400d70:   f3 c3                        	ret 
; section: .fini
; function: _fini at 0x400d74 -- 0x400d7d
0x400d74:   48 83 ec 08                  	sub rsp, 8
0x400d78:   48 83 c4 08                  	add rsp, 8
0x400d7c:   c3                           	ret 

;;
;; Data Segment
;;

; section: .interp
0x400238:   2f 6c 69 62 36 34 2f 6c  64 2d 6c 69 6e 75 78 2d   |/lib64/ld-linux-|
0x400248:   78 38 36 2d 36 34 2e 73  6f 2e 32 00 04            |x86-64.so.2..   |
; section: .gnu.hash
0x400298:   01 00 00 00 01 00 00 00  01 00 00 00 00 00 00 00   |................|
0x4002a8:   00 00 00 00 00 00 00 00  00 00 00 00 ??            |............?   |
; section: .dynsym
0x4002b8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4002c8:   00 00 00 00 00 00 00 00  19 00 00 00 12 00 00 00   |................|
0x4002d8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4002e8:   23 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |#...............|
0x4002f8:   00 00 00 00 00 00 00 00  0c 00 00 00 12 00 00 00   |................|
0x400308:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400318:   0b 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400328:   00 00 00 00 00 00 00 00  39 00 00 00 12 00 00 00   |........9.......|
0x400338:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400348:   13 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400358:   00 00 00 00 00 00 00 00  4b 00 00 00 20 00 00 00   |........K... ...|
0x400368:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400378:   1e 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400388:   00 00 00 00 00 00 00 00  34 00 00 00 12 00 00 00   |........4.......|
0x400398:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4003a8:   14 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4003b8:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .dynstr
0x4003c0:   00 6c 69 62 63 2e 73 6f  2e 36 00 64 70 72 69 6e   |.libc.so.6.dprin|
0x4003d0:   74 66 00 73 72 61 6e 64  00 70 75 74 73 00 74 69   |tf.srand.puts.ti|
0x4003e0:   6d 65 00 5f 5f 73 74 61  63 6b 5f 63 68 6b 5f 66   |me.__stack_chk_f|
0x4003f0:   61 69 6c 00 61 74 6f 69  00 5f 5f 6c 69 62 63 5f   |ail.atoi.__libc_|
0x400400:   73 74 61 72 74 5f 6d 61  69 6e 00 5f 5f 67 6d 6f   |start_main.__gmo|
0x400410:   6e 5f 73 74 61 72 74 5f  5f 00 47 4c 49 42 43 5f   |n_start__.GLIBC_|
0x400420:   32 2e 34 00 47 4c 49 42  43 5f 32 2e 32 2e 35 00   |2.4.GLIBC_2.2.5.|
0x400430:   00                                                 |.               |
; section: .gnu.version
0x400430:   00 00 02 00 03 00 02 00  02 00 02 00 02 00 00 00   |................|
0x400440:   02 00 02 00 02 00 ??                               |......?         |
; section: .gnu.version_r
0x400448:   01 00 02 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x400458:   14 69 69 0d 00 00 03 00  5a 00 00 00 10 00 00 00   |.ii.....Z.......|
0x400468:   75 1a 69 09 00 00 02 00  64 00 00 00 00 00 00 00   |u.i.....d.......|
0x400478:   f8                                                 |.               |
; section: .rela.dyn
0x400478:   f8 1f 60 00 00 00 00 00  06 00 00 00 07 00 00 00   |..`.............|
0x400488:   00 00 00 00 00 00 00 00  18                        |.........       |
; section: .rela.plt
0x400490:   18 20 60 00 00 00 00 00  07 00 00 00 01 00 00 00   |. `.............|
0x4004a0:   00 00 00 00 00 00 00 00  20 20 60 00 00 00 00 00   |........  `.....|
0x4004b0:   07 00 00 00 02 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4004c0:   28 20 60 00 00 00 00 00  07 00 00 00 03 00 00 00   |( `.............|
0x4004d0:   00 00 00 00 00 00 00 00  30 20 60 00 00 00 00 00   |........0 `.....|
0x4004e0:   07 00 00 00 04 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4004f0:   38 20 60 00 00 00 00 00  07 00 00 00 05 00 00 00   |8 `.............|
0x400500:   00 00 00 00 00 00 00 00  40 20 60 00 00 00 00 00   |........@ `.....|
0x400510:   07 00 00 00 06 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400520:   48 20 60 00 00 00 00 00  07 00 00 00 08 00 00 00   |H `.............|
0x400530:   00 00 00 00 00 00 00 00  50 20 60 00 00 00 00 00   |........P `.....|
0x400540:   07 00 00 00 09 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400550:   58 20 60 00 00 00 00 00  07 00 00 00 0a 00 00 00   |X `.............|
0x400560:   00 00 00 00 00 00 00 00  48                        |........H       |
; section: .rodata
0x400d80:   01 00 02 00 00 00 00 00                            |........        |
0x400d88:   25 64 20 00                                        |%d .            |   "%d "
0x400d8c:   2d 20 25 64 0a 00                                  |- %d..          |   "- %d\n"
0x400d92:   00 00 00 00 00 00                                  |......          |
0x400d98:   43 6f 6e 67 72 61 74 75  6c 61 74 69 6f 6e 73 2c   |Congratulations,|   "Congratulations, you win 1 point"
0x400da8:   20 79 6f 75 20 77 69 6e  20 31 20 70 6f 69 6e 74   | you win 1 point|
0x400db8:   00                                                 |.               |
0x400db9:   00 00 00 00 00 00 00                               |.......         |
0x400dc0:   43 6f 6e 67 72 61 74 75  6c 61 74 69 6f 6e 73 2c   |Congratulations,|   "Congratulations, you win 2 points"
0x400dd0:   20 79 6f 75 20 77 69 6e  20 32 20 70 6f 69 6e 74   | you win 2 point|
0x400de0:   73 00                                              |s.              |
0x400de2:   00 00 00 00 00 00                                  |......          |
0x400de8:   43 6f 6e 67 72 61 74 75  6c 61 74 69 6f 6e 73 2c   |Congratulations,|   "Congratulations, you win 5 points"
0x400df8:   20 79 6f 75 20 77 69 6e  20 35 20 70 6f 69 6e 74   | you win 5 point|
0x400e08:   73 00                                              |s.              |
0x400e0a:   00 00 00 00 00 00                                  |......          |
0x400e10:   43 6f 6e 67 72 61 74 75  6c 61 74 69 6f 6e 73 2c   |Congratulations,|   "Congratulations, you win 50 points"
0x400e20:   20 79 6f 75 20 77 69 6e  20 35 30 20 70 6f 69 6e   | you win 50 poin|
0x400e30:   74 73 00                                           |ts.             |
0x400e33:   00 00 00 00 00                                     |.....           |
0x400e38:   43 6f 6e 67 72 61 74 75  6c 61 74 69 6f 6e 73 2c   |Congratulations,|   "Congratulations, you win 500 points"
0x400e48:   20 79 6f 75 20 77 69 6e  20 35 30 30 20 70 6f 69   | you win 500 poi|
0x400e58:   6e 74 73 00                                        |nts.            |
0x400e5c:   00 00 00 00                                        |....            |
0x400e60:   43 6f 6e 67 72 61 74 75  6c 61 74 69 6f 6e 73 2c   |Congratulations,|   "Congratulations, you win 5,000 points"
0x400e70:   20 79 6f 75 20 77 69 6e  20 35 2c 30 30 30 20 70   | you win 5,000 p|
0x400e80:   6f 69 6e 74 73 00                                  |oints.          |
0x400e86:   00 00                                              |..              |
0x400e88:   43 6f 6e 67 72 61 74 75  6c 61 74 69 6f 6e 73 2c   |Congratulations,|   "Congratulations, you win 1,000,000 points"
0x400e98:   20 79 6f 75 20 77 69 6e  20 31 2c 30 30 30 2c 30   | you win 1,000,0|
0x400ea8:   30 30 20 70 6f 69 6e 74  73 00                     |00 points.      |
0x400eb2:   00 00 00 00 00 00                                  |......          |
0x400eb8:   43 6f 6e 67 72 61 74 75  6c 61 74 69 6f 6e 73 2c   |Congratulations,|   "Congratulations, you win the Jackpot!"
0x400ec8:   20 79 6f 75 20 77 69 6e  20 74 68 65 20 4a 61 63   | you win the Jac|
0x400ed8:   6b 70 6f 74 21 00                                  |kpot!.          |
0x400ede:   53 6f 72 72 79 2c 20 74  72 79 20 61 67 61 69 6e   |Sorry, try again|   "Sorry, try again!"
0x400eee:   21 00                                              |!.              |
0x400ef0:   55 73 61 67 65 3a 20 67  6d 20 6e 31 20 6e 32 20   |Usage: gm n1 n2 |   "Usage: gm n1 n2 n3 n4 n5 bonus\n - (first pool) five different numbers from 1 to 75, followed by \n - (second pool) one number from 1 to 15\n"
0x400f00:   6e 33 20 6e 34 20 6e 35  20 62 6f 6e 75 73 0a 20   |n3 n4 n5 bonus. |
0x400f10:   2d 20 28 66 69 72 73 74  20 70 6f 6f 6c 29 20 66   |- (first pool) f|
0x400f20:   69 76 65 20 64 69 66 66  65 72 65 6e 74 20 6e 75   |ive different nu|
0x400f30:   6d 62 65 72 73 20 66 72  6f 6d 20 31 20 74 6f 20   |mbers from 1 to |
0x400f40:   37 35 2c 20 66 6f 6c 6c  6f 77 65 64 20 62 79 20   |75, followed by |
0x400f50:   0a 20 2d 20 28 73 65 63  6f 6e 64 20 70 6f 6f 6c   |. - (second pool|
0x400f60:   29 20 6f 6e 65 20 6e 75  6d 62 65 72 20 66 72 6f   |) one number fro|
0x400f70:   6d 20 31 20 74 6f 20 31  35 0a 00                  |m 1 to 15..     |
0x400f7b:   ??                                                 |?               |
; section: .eh_frame_hdr
0x400f7c:   01 1b 03 3b 50 00 00 00  09 00 00 00 14 f6 ff ff   |...;P...........|
0x400f8c:   9c 00 00 00 c4 f6 ff ff  6c 00 00 00 ba f7 ff ff   |........l.......|
0x400f9c:   c4 00 00 00 8e f8 ff ff  e4 00 00 00 4d fa ff ff   |............M...|
0x400fac:   0c 01 00 00 ad fa ff ff  2c 01 00 00 2d fc ff ff   |........,...-...|
0x400fbc:   4c 01 00 00 84 fd ff ff  6c 01 00 00 f4 fd ff ff   |L.......l.......|
0x400fcc:   b4 01 00 00 14                                     |.....           |
; section: .eh_frame
0x400fd0:   14 00 00 00 00 00 00 00  01 7a 52 00 01 78 10 01   |.........zR..x..|
0x400fe0:   1b 0c 07 08 90 01 07 10  14 00 00 00 1c 00 00 00   |................|
0x400ff0:   50 f6 ff ff 2a 00 00 00  00 00 00 00 00 00 00 00   |P...*...........|
0x401000:   14 00 00 00 00 00 00 00  01 7a 52 00 01 78 10 01   |.........zR..x..|
0x401010:   1b 0c 07 08 90 01 00 00  24 00 00 00 1c 00 00 00   |........$.......|
0x401020:   70 f5 ff ff a0 00 00 00  00 0e 10 46 0e 18 4a 0f   |p..........F..J.|
0x401030:   0b 77 08 80 00 3f 1a 3b  2a 33 24 22 00 00 00 00   |.w...?.;*3$"....|
0x401040:   1c 00 00 00 44 00 00 00  ee f6 ff ff d4 00 00 00   |....D...........|
0x401050:   00 41 0e 10 86 02 43 0d  06 02 cf 0c 07 08 00 00   |.A....C.........|
0x401060:   24 00 00 00 64 00 00 00  a2 f7 ff ff bf 01 00 00   |$...d...........|
0x401070:   00 41 0e 10 86 02 43 0d  06 45 83 03 03 b5 01 0c   |.A....C..E......|
0x401080:   07 08 00 00 00 00 00 00  1c 00 00 00 8c 00 00 00   |................|
0x401090:   39 f9 ff ff 60 00 00 00  00 41 0e 10 86 02 43 0d   |9...`....A....C.|
0x4010a0:   06 02 5b 0c 07 08 00 00  1c 00 00 00 ac 00 00 00   |..[.............|
0x4010b0:   79 f9 ff ff 80 01 00 00  00 41 0e 10 86 02 43 0d   |y........A....C.|
0x4010c0:   06 03 7b 01 0c 07 08 00  1c 00 00 00 cc 00 00 00   |..{.............|
0x4010d0:   d9 fa ff ff 50 01 00 00  00 41 0e 10 86 02 43 0d   |....P....A....C.|
0x4010e0:   06 03 4b 01 0c 07 08 00  44 00 00 00 ec 00 00 00   |..K.....D.......|
0x4010f0:   10 fc ff ff 65 00 00 00  00 42 0e 10 8f 02 42 0e   |....e....B....B.|
0x401100:   18 8e 03 45 0e 20 8d 04  42 0e 28 8c 05 48 0e 30   |...E. ..B.(..H.0|
0x401110:   86 06 48 0e 38 83 07 4d  0e 40 72 0e 38 41 0e 30   |..H.8..M.@r.8A.0|
0x401120:   41 0e 28 42 0e 20 42 0e  18 42 0e 10 42 0e 08 00   |A.(B. B..B..B...|
0x401130:   14 00 00 00 34 01 00 00  38 fc ff ff 02 00 00 00   |....4...8.......|
0x401140:   00 00 00 00 00 00 00 00  00 00 00 00 ??            |............?   |
; section: .init_array
0x601e10:   10 07 40 00 00 00 00 00  f0                        |..@......       |
; section: .fini_array
0x601e18:   f0 06 40 00 00 00 00 00  00                        |..@......       |
; section: .jcr
0x601e20:   00 00 00 00 00 00 00 00  01                        |.........       |
; section: .dynamic
0x601e28:   01 00 00 00 00 00 00 00  01 00 00 00 00 00 00 00   |................|
0x601e38:   0c 00 00 00 00 00 00 00  68 05 40 00 00 00 00 00   |........h.@.....|
0x601e48:   0d 00 00 00 00 00 00 00  74 0d 40 00 00 00 00 00   |........t.@.....|
0x601e58:   19 00 00 00 00 00 00 00  10 1e 60 00 00 00 00 00   |..........`.....|
0x601e68:   1b 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x601e78:   1a 00 00 00 00 00 00 00  18 1e 60 00 00 00 00 00   |..........`.....|
0x601e88:   1c 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x601e98:   f5 fe ff 6f 00 00 00 00  98 02 40 00 00 00 00 00   |...o......@.....|
0x601ea8:   05 00 00 00 00 00 00 00  c0 03 40 00 00 00 00 00   |..........@.....|
0x601eb8:   06 00 00 00 00 00 00 00  b8 02 40 00 00 00 00 00   |..........@.....|
0x601ec8:   0a 00 00 00 00 00 00 00  70 00 00 00 00 00 00 00   |........p.......|
0x601ed8:   0b 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x601ee8:   15 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x601ef8:   03 00 00 00 00 00 00 00  00 20 60 00 00 00 00 00   |......... `.....|
0x601f08:   02 00 00 00 00 00 00 00  d8 00 00 00 00 00 00 00   |................|
0x601f18:   14 00 00 00 00 00 00 00  07 00 00 00 00 00 00 00   |................|
0x601f28:   17 00 00 00 00 00 00 00  90 04 40 00 00 00 00 00   |..........@.....|
0x601f38:   07 00 00 00 00 00 00 00  78 04 40 00 00 00 00 00   |........x.@.....|
0x601f48:   08 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x601f58:   09 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x601f68:   fe ff ff 6f 00 00 00 00  48 04 40 00 00 00 00 00   |...o....H.@.....|
0x601f78:   ff ff ff 6f 00 00 00 00  01 00 00 00 00 00 00 00   |...o............|
0x601f88:   f0 ff ff 6f 00 00 00 00  30 04 40 00 00 00 00 00   |...o....0.@.....|
0x601f98:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x601fa8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x601fb8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x601fc8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x601fd8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x601fe8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x601ff8:   00                                                 |.               |
; section: .got
0x601ff8:   00 00 00 00 00 00 00 00  28                        |........(       |
; section: .got.plt
0x602000:   28 1e 60 00 00 00 00 00  00 00 00 00 00 00 00 00   |(.`.............|
0x602010:   00 00 00 00 00 00 00 00  a6 05 40 00 00 00 00 00   |..........@.....|
0x602020:   b6 05 40 00 00 00 00 00  c6 05 40 00 00 00 00 00   |..@.......@.....|
0x602030:   d6 05 40 00 00 00 00 00  e6 05 40 00 00 00 00 00   |..@.......@.....|
0x602040:   f6 05 40 00 00 00 00 00  06 06 40 00 00 00 00 00   |..@.......@.....|
0x602050:   16 06 40 00 00 00 00 00  26 06 40 00 00 00 00 00   |..@.....&.@.....|
0x602060:   00                                                 |.               |
; section: .data
0x602060:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x602070:   00                                                 |.               |
